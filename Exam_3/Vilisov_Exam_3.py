#1 Создайте класс "Студент", который имеет атрибуты имя и возраст, а также методы "изменить_имя" и "изменить_возраст". Напишите функцию,
# которая создает объект класса "Студент", запрашивая у пользователя его имя и возраст, а затем предлагает пользователю изменить имя и возраст.

# class Student:
# 	name=''
# 	age=''
# 	def greet(self):
# 		print(f'Добро пожаловать {self.name},я продвинутый Пайтон предлагаю вам немного помолодеть введите  свое новое  имя и возраст ?')
# a=Student()
# a.name=input('Назовите ваше имя')
# a.age=input('Сколько вам лет ')
# a.greet()
# Student.name=input('Введите ваше новое имя')
# Student.age=input('Введите сколько вам лет ')
# print(f'Теперь ваше имя {Student.name}, и вам {Student.age} лет')


# 2 Напишите функцию, которая принимает на вход список чисел и возвращает сумму квадратов всех четных чисел в списке.
# spisok=[1,2,3,4,5,6,7]
# def fun(spisok):
#     n=0
#     for i in spisok:
#         if i %2==0:
#              n+=i**2
#     return n
# print(fun(spisok))

# 3 Создайте класс "Калькулятор", который имеет атрибуты "значение" и методы "сложить", "вычесть", "умножить" и "разделить". Напишите функцию, которая
# создает объект класса "Калькулятор" и позволяет пользователю выполнить несколько арифметических операций с его помощью.

# class Calc:
#     def __init__(self):
#         self.a = float(input('Введите число'))
#         self.b = float(input('Введите число'))
#     def add(self): return self.a + self.b
#     def differ(self): return self.a - self.b
#     def mul(self): return self.a * self.b
#     def div(self): return self.a / self.b
# while True:
#     dist = input('Выберите  операцию: ')
#     if dist not in '+-/*' or dist=='': break
#     my_calc = Calc()
#     if dist == '+': print(my_calc.add())
#     elif dist == '-': print(my_calc.differ())
#     elif dist == '*': print(my_calc.mul())
#     elif dist == '/': print(my_calc.div())
#     else:
#         print('Такой операции нет')
#         break

# 4Создайте класс "Автомобиль", который имеет атрибуты "марка", "модель", "год_выпуска", "цвет" и метод "описание",
# который выводит описание автомобиля в виде строки. Напишите функцию, которая создает объект класса "Автомобиль", запрашивая у пользователя информацию
# о марке, модели, годе выпуска и цвете, а затем выводит описание автомобиля.

# class Car:
#     make = ''
#     model = ''
#     year = ''
#     color = ''
#
#     def get_info(self):
#         return f'Автомобиль {self.make}, модель{self.model},год выпуска {self.year},цвет {self.color}'
#
#
# def my_fun():
#     a = Car()
#     a.make = input('Введите марку автомобиля ')
#     a.model = input('Введите модель ')
#     a.year = input('Введите год выпуска')
#     a.color = input('Введите цвет ')
#     print(a.get_info())
#
# my_fun()


# 5Создайте класс "Сотрудник", который имеет атрибуты "имя", "фамилия", "должность" и метод "описание",
# который выводит описание сотрудника в виде строки. Создайте класс "Отдел", который имеет атрибуты "название" и "список_сотрудников",
# а также методы "добавить_сотрудника" и "удалить_сотрудника". Напишите функцию, которая создает объект класса "Отдел", запрашивая
# у пользователя его название, а затем предлагает пользователю добавить несколько сотрудников в отдел, после чего выводит список всех сотрудников
# в отделе и их описания. Затем функция предлагает пользователю удалить одного из сотрудников и выводит обновленный список сотрудников и их описания.
